create table patient(
id int IDENTITY PRIMARY KEY,
fullname VARCHAR(30) NOT NULL,
emailid VARCHAR(30) NOT NULL,
password VARCHAR(10) NOT NULL,
address VARCHAR(30) NOT NULL,
phone varchar(10) NOT NULL,
usertype int not null
);



create table role(
id int identity Primary key,
usertype varchar(20),
);

insert into patient(fullname,emailid,password,address,phone,usertype) 
values('konsam','konsam@gmail.com','konsam','Polo',9089608955,3);




 create table doctor (
id  INT IDENTITY PRIMARY KEY,
fname VARCHAR(20) NOT NULL,
lname VARCHAR(20) NOT NULL,
emailid VARCHAR(20) NOT NULL,
password VARCHAR(15) NOT NULL,
designation VARCHAR(20) NOT NULL,
dept int NOT NULL,
phno VARCHAR(10) NOT NULL,
DOB DATE NOT NULL,
address VARCHAR(20) NOT NULL,
experience VARCHAR(200) NOT NULL,
profile   VARCHAR(200) NOT NULL
FOREIGN KEY (dept) REFERENCES app_dept(id) ON DELETE CASCADE ON UPDATE CASCADE
);


create table app_dept(
id INT identity PRIMARY KEY,
dept_name VARCHAR(30)
);



select p.emailid,p.usertype,d.fname,d.usertype,r.usertype  from role r 
inner join patient p  on  p.usertype = r.id
inner join doctor d  on  d.usertype = r.id




use TrainingDB


select r * from  role r


create table login(
id int IDENTITY PRIMARY KEY,
username VARCHAR(20) NOT NULL,
password VARCHAR(20) NOT NULL,
usertype VARCHAR(20) NOT NULL
);


select * from login

ALTER TABLE login 
 ADD  userid VARCHAR(12);

select * from patient

select  from p*.,r.id,r.usertype  from role r 
inner join patient p  on  p.usertype = r.id

select  d.fname,d.lname,l.password  from login l
inner join doctor d  on   d.id = l.userid 



select * from doctor
select * from login


**************************************
 create table admin(
id int IDENTITY PRIMARY KEY,
emailid VARCHAR(30) NOT NULL,
password VARCHAR(10) NOT NULL,
);

select * from admin



create table Customers
(
CustomerId int IDENTITY PRIMARY KEY,
 Name VARCHAR(200) not null,
Country VARCHAR (200) not null
);











use TrainingDB

select * from customers

select * from patient
select * from appointment
select * from doctor
select * from   update appointment  set fees='0'
treatment
select a.appointment_id,a.appoint_date,a.start_date,a.end_date,a.fees,d.emailid from appointment a inner join doctor d on a.appoint_docid = d.id where d.emailid= 'binesh56@gmail.com' and a.status='approved'

alter table appointment add treatment_status VARCHAR(300)
alter table customers add ContactName varchar(200),CompanyName VARCHAR(200)


CREATE  PROCEDURE [dbo].[startTreatments]
      @appointment_id NCHAR(5),
      @start_date NVARCHAR(30),
      @end_date NVARCHAR(40),
	  @fees int
	

AS
BEGIN
      SET NOCOUNT ON;
    IF EXISTS(SELECT * FROM appointment WHERE appointment_id = @appointment_id)
    BEGIN
            UPDATE [appointment]
            SET [start_date] = @start_date
               ,[end_date] = @end_date,
			   [fees] = @fees,
			   [treatment_status] = 'Process'
            WHERE appointment_id = @appointment_id
    END
    SELECT [appointment_id]
          ,[start_date]
          ,[end_date],
		  [fees],
		  [treatment_status]
      FROM appointment 
          
END



exec startTreatment
IF OBJECT_ID('startTreatments') IS NOT NULL DROP PROCEDURE startTreatments
GO
**********************************
 CREATE PROCEDURE spdoctorList
AS
BEGIN
    SELECT * FROM doctor
END
